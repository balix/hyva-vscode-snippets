{
    "Create modal": {
        "scope": "html",
        "prefix": "hyva.template.createModal",
        "body": [
            "<?= $$modalViewModel->createModal()->withContent(<<<END_OF_CONTENT",
            "\t<div id=\"${1:the label}\">",
            "\t\t{$$escaper->escapeHtml(__('${2:Inline Content Example}'))}",
            "\t</div>",
            "\t<div class=\"mt-20 flex justify-between gap-2\">",
            "\t\t<button @click=\"hide\" type=\"button\" class=\"btn\">",
            "\t\t\t{$$escaper->escapeHtml(__('Cancel'))}",
            "\t\t</button>",
            "\t\t<button x-focus-first @click=\"${3:doSomething}\" type=\"button\" class=\"btn btn-primary\">",
            "\t\t\t{$$escaper->escapeHtml(__('Yes'))}",
            "\t\t</button>",
            "\t</div>",
            "END_OF_CONTENT)",
            "-> positionCenter()",
            "->withOverlayClasses(${4:'fixed', 'inset-0', 'bg-black', 'bg-opacity-50', 'z-10'})",
            "->withContainerClasses(${5:'fixed', 'flex', 'justify-center', 'items-center', 'text-left'})",
            "->withDialogClasses(${6:'inline-block', 'bg-white', 'shadow-xl', 'rounded-lg', 'p-10'})",
            "->withAriaLabelledby('${7:the label}') ",
            "?>"
        ],
        "description": "Create new modal with Hyv채 Modal ViewModel"
    },
    "Echo Heroicons icon": {
        "scope": "html, javascript",
        "prefix": "hyva.template.echoHeroiconsIcon",
        "body": [
            "<?= $$heroicons->${1:arrowLeftHtml}('${2:w-8 h-8}', ${3:24}, ${4:24}) ?>"
        ],
        "description": "Echo Heroicons icon with Heroicons ViewModel"
    },
    "Echo loader": {
        "scope": "html, javascript",
        "prefix": "hyva.template.echoLoader",
        "body": [
            "<?= $$block->getChildHtml('loading') ?>"
        ],
        "description": "Echo Hyv채 UI loader"
    },
    "Echo SvgIcons icon": {
        "scope": "html, javascript",
        "prefix": "hyva.template.echoSvgIconsIcon",
        "body": [
            "<?= $$hyvaicons->renderHtml('${1:icon-name}', '${2:w-8 h-8}', ${3:24}, ${4:24}); ?>"
        ],
        "description": "Render SVG icon with SvgIcons ViewModel"
    },
    "Echo translation": {
        "scope": "html, javascript",
        "prefix": "hyva.template.echoTranslation",
        "body": [
            "<?= $$escaper->escapeHtml(__('${1:string}')); ?>"
        ],
        "description": "Echo escaped Magento 2 translation"
    },
    "Echo translation with variable": {
        "scope": "html, javascript",
        "prefix": "hyva.template.echoTranslationWithVariable",
        "body": [
            "<?= $$escaper->escapeHtml(__('${1:string} : %1', $${2:var})); ?>"
        ],
        "description": "Echo escaped Magento 2 translation with variable"
    },
    "Escape HTML": {
        "scope": "php, javascript",
        "prefix": "hyva.template.escapeHtml",
        "body": [
            "$$escaper->escapeHtml(${1:data});"
        ],
        "description": "Add Magento 2 HTML escaper"
    },
    "Escape HTML attribute": {
        "scope": "php, javascript",
        "prefix": "hyva.template.escapeHtmlAttr",
        "body": [
            "$$escaper->escapeHtmlAttr(${1:string});"
        ],
        "description": "Add Magento 2 HTML attribute escaper"
    },
    "Escape JavaScript": {
        "scope": "php, javascript",
        "prefix": "hyva.template.escapeJs",
        "body": [
            "$$escaper->escapeJs(${1:string});"
        ],
        "description": "Add Magento 2 JavaScript escaper"
    },
    "Escape URL": {
        "scope": "php, javascript",
        "prefix": "hyva.template.escapeUrl",
        "body": [
            "$$escaper->escapeUrl($${string});"
        ],
        "description": "Add Magento 2 URL escaper"
    },
    "Get child HTML": {
        "scope": "html",
        "prefix": "hyva.template.getChildHtml",
        "body": [
            "<?= $$block->getChildHtml('${1:block_name}'); ?>"
        ],
        "description": "Add Magento 2 getChildHtml() to render child block"
    },
    "Get file URL": {
        "scope": "html, javascript",
        "prefix": "hyva.template.getFileUrl",
        "body": [
            "<?= $$this->getViewFileUrl('${1:Vendor_Module}::/${2:path}/${3:name-of-the-file.xx}') ?>"
        ],
        "description": "Use Magento 2 getFileUrl() method to render a file"
    },
    "Get URL": {
        "scope": "html, javascript",
        "prefix": "hyva.template.getUrl",
        "body": [
            "<?= $$this->getUrl('${1:name-of-the-page}') ?>"
        ],
        "description": "Use Magento 2 getUrl() method to render the page path"
    },
    "Format price": {
        "scope": "php",
        "prefix": "hyva.template.formatPrice",
        "body": [
            "$$productPriceViewModel->format(${1:$$value})"
        ],
        "description": "Use Magento 2 formatPrice() method to formats and returns the given value using the current currency"
    },
    "Is customer logged in": {
        "scope": "php",
        "prefix": "hyva.template.isCustomerLoggedIn",
        "body": [
            "$$block->customerLoggedIn()"
        ],
        "description": "Use Magento 2 isCustomerLoggedIn() method to check if customer is logged in"
    },
    "Is product in stock": {
        "scope": "html, javascript",
        "prefix": "hyva.template.isProductInStock",
        "body": [
            "$$stockItemViewModel->isInStock()"
        ],
        "description": "Use Magento 2 isProductInStock() method to check if product is in stock"
    },
    "Require customer ViewModel": {
        "scope": "php",
        "prefix": "hyva.template.requireCustomerViewModel",
        "body": [
            "use Magento\\Customer\\Block\\Account\\Customer;",
            "\n/** @var Customer $$block */"
        ],
        "description": "Require customer ViewModel"
    },
    "Require Heroicons outline ViewModel": {
        "scope": "php",
        "prefix": "hyva.template.requireHericonsOutlineViewModel",
        "body": [
            "use Hyva\\Theme\\ViewModel\\HeroiconsOutline;",
            "\n/** @var HeroiconsOutline $$heroicons */",
            "$$heroicons = $$viewModels->require(HeroiconsOutline::class);"
        ],
        "description": "Require Heroicons outline ViewModel"
    },
    "Require Heroicons solid ViewModel": {
        "scope": "php",
        "prefix": "hyva.template.requireHericonsSolidViewModel",
        "body": [
            "use Hyva\\Theme\\ViewModel\\HeroiconsSolid;",
            "\n/** @var HeroiconsSolid $$heroicons */",
            "$$heroicons = $$viewModels->require(HeroiconsSolid::class);"
        ],
        "description": "Require Heroicons solid ViewModel"
    },
    "Require Hyv채 Modal ViewModel": {
        "scope": "php",
        "prefix": "hyva.template.requireModalViewModel",
        "body": [
            "use Hyva\\Theme\\ViewModel\\Modal;",
            "\n/** @var Modal $$modalViewModel */",
            "$$modalViewModel = $$viewModels->require(Modal::class);"
        ],
        "description": "Require Hyv채 Modal ViewModel"
    },
    "Require product price ViewModel": {
        "scope": "php",
        "prefix": "hyva.template.requireProductPriceViewModel",
        "body": [
            "use Hyva\\Theme\\ViewModel\\ProductPrice;",
            "\n/** @var ProductPrice $$productPriceViewModel */",
            "$$productPriceViewModel = $$viewModels->require(ProductPrice::class);"
        ],
        "description": "Require product price ViewModel"
    },
    "Require product stock item ViewModel": {
        "scope": "php",
        "prefix": "hyva.template.requireProductStockItemViewModel",
        "body": [
            "use Hyva\\Theme\\ViewModel\\ProductStockItem;",
            "\n/** @var ProductStockItem $$stockItemViewModel */",
            "$$stockItemViewModel = $$viewModels->require(ProductStockItem::class);"
        ],
        "description": "Require product stock item ViewModel"
    },
    "Require SvgIcons ViewModel": {
        "scope": "php",
        "prefix": "hyva.template.requireSvgIconsViewModel",
        "body": [
            "use Hyva\\Theme\\ViewModel\\SvgIcons;",
            "\n/** @var SvgIcons $$hyvaicons */",
            "$$hyvaicons = $$viewModels->require(SvgIcons::class);"
        ],
        "description": "Require SvgIcons ViewModel"
    }
}
